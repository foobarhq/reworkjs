{"version":3,"sources":["webpack:///../docs/advanced-topics/configuration.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,uNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qBADR,qBAGA,iBAAQ,CACN,GAAM,YADR,YAGA,qEACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,kBADZ,ubAoBL,gDAA+B,kBAAIA,WAAW,MAA9C,wEAEA,iBAAQ,CACN,GAAM,eACL,0BAAYA,WAAW,MAAvB,gBACH,iCAAgB,0BAAYA,WAAW,KAAvB,YAChB,uDAAsC,mBAAGA,WAAW,KAAQ,CACxD,KAAQ,+CAD0B,gBAAtC,gEAGA,yCAAwB,0BAAYA,WAAW,KAAvB,WAAxB,QAAoF,mBAAGA,WAAW,KAAQ,CACtG,KAAQ,iEADwE,iBAApF,KAEgC,0BAAYA,WAAW,KAAvB,QAFhC,QAEyF,mBAAGA,WAAW,KAAQ,CAC3G,KAAQ,8DAD6E,eAGzF,iBAAQ,CACN,GAAM,oBACL,0BAAYA,WAAW,MAAvB,sBACH,iCAAgB,0BAAYA,WAAW,KAAvB,aAChB,iFACA,wDAAuC,0BAAYA,WAAW,KAAvB,8BAAsE,kBAAIA,WAAW,MAA5H,wCACkC,0BAAYA,WAAW,KAAvB,+BAClC,iBAAQ,CACN,GAAM,mBACL,0BAAYA,WAAW,MAAvB,qBACH,0CAAyB,0BAAYA,WAAW,KAAvB,sBACzB,uFACA,iBAAQ,CACN,GAAM,wBACL,0BAAYA,WAAW,MAAvB,0BACH,iCAAgB,0BAAYA,WAAW,KAAvB,iBAChB,gIAA+G,0BAAYA,WAAW,KAAvB,gBAA/G,KACA,oDAAmC,0BAAYA,WAAW,KAAvB,aAAnC,iCAA0H,0BAAYA,WAAW,KAAvB,UAA1H,kCAA+M,kBAAIA,WAAW,MAA9N,oEAC8D,0BAAYA,WAAW,KAAvB,cAD9D,OAC4H,0BAAYA,WAAW,KAAvB,WAD5H,MAEA,2CAA0B,mBAAGA,WAAW,KAAQ,CAC5C,KAAQ,6BADc,oBAA1B,yBAGA,iBAAQ,CACN,GAAM,2BACL,0BAAYA,WAAW,MAAvB,6BACH,iCAAgB,0BAAYA,WAAW,KAAvB,uBAChB,8EAA6D,0BAAYA,WAAW,KAAvB,cAA7D,2BAA+I,mBAAGA,WAAW,KAAQ,CACjK,KAAQ,iBADmI,SAG/I,iBAAQ,CACN,GAAM,UACL,0BAAYA,WAAW,MAAvB,WACH,iCAAgB,0BAAYA,WAAW,KAAvB,sBAChB,yHAAwG,mBAAGA,WAAW,KAAQ,CAC1H,KAAQ,iBAD4F,WAAxG,0BAGA,iBAAQ,CACN,GAAM,YACL,0BAAYA,WAAW,MAAvB,aACH,sCACA,uMAEA,4JACA,2GACA,mLACA,iBAAQ,CACN,GAAM,eACL,0BAAYA,WAAW,MAAvB,gBACH,4BACA,iBAAQ,CACN,GAAM,kBACL,0BAAYA,WAAW,MAAvB,mBACH,sCACA,4FACA,iBAAQ,CACN,GAAM,SACL,0BAAYA,WAAW,MAAvB,UACH,4BAAW,mBAAGA,WAAW,KAAQ,CAC7B,KAAQ,2BADD,iCAGX,iBAAQ,CACN,GAAM,WACL,0BAAYA,WAAW,MAAvB,YACH,4BAAW,mBAAGA,WAAW,KAAQ,CAC7B,KAAQ,6BADD,kCAGX,iBAAQ,CACN,GAAM,iDADR,iDAGA,qBAAG,0BAAYA,WAAW,KAAvB,gC,8MAKPJ,EAAWK,gBAAiB","file":"component---docs-advanced-topics-configuration-md-e1d9023def158bca80ed.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ephys/Documents/dev/reworkjs/reworkjs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"rjs-configuration\"\n    }}>{`RJS Configuration`}</h1>\n    <h2 {...{\n      \"id\": \"contents\"\n    }}>{`Contents`}</h2>\n    <p>{`Example configuration file with all entries:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"routingType\": \"browser\",\n  \"directories\": {\n    \"logs\": \"./.build\",\n    \"build\": \"./.build\",\n    \"resources\": \"./src/public\",\n    \"translations\": \"./src/translations\"\n  },\n  \"routes\": \"**/*.route.js\",\n  \"entry-react\": \"./src/components/App\",\n  \"render-html\": \"./src/render-html.js\",\n  \"pre-init\": \"./src/pre-init.js\",\n  \"service-worker\": \"./src/service-worker.js\",\n  \"plugins\": {\n    \"@reworkjs/redux\": {}\n  }\n}\n`}</code></pre>\n    <p>{`All entries are optional`}<br parentName=\"p\"></br>{`\n`}{`Paths are resolved from the location of your configuration file`}</p>\n    <h3 {...{\n      \"id\": \"routingtype\"\n    }}><inlineCode parentName=\"h3\">{`routingType`}</inlineCode></h3>\n    <p>{`Default: `}<inlineCode parentName=\"p\">{`browser`}</inlineCode></p>\n    <p>{`The type of router to use, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://reacttraining.com/react-router/web\"\n      }}>{`React-Router`}</a>{` documentation for more information on the types of routers.`}</p>\n    <p>{`Possible values: `}<inlineCode parentName=\"p\">{`browser`}</inlineCode>{` for `}<a parentName=\"p\" {...{\n        \"href\": \"https://reacttraining.com/react-router/web/api/BrowserRouter\"\n      }}>{`BrowserRouter`}</a>{`, `}<inlineCode parentName=\"p\">{`hash`}</inlineCode>{` for `}<a parentName=\"p\" {...{\n        \"href\": \"https://reacttraining.com/react-router/web/api/HashRouter\"\n      }}>{`HashRouter`}</a></p>\n    <h3 {...{\n      \"id\": \"directoriesbuild\"\n    }}><inlineCode parentName=\"h3\">{`directories.build`}</inlineCode></h3>\n    <p>{`Default: `}<inlineCode parentName=\"p\">{`./.build`}</inlineCode></p>\n    <p>{`The directory in which compiled files will be outputted.`}</p>\n    <p>{`server files will be located in `}<inlineCode parentName=\"p\">{`{directories.build}/server`}</inlineCode><br parentName=\"p\"></br>{`\n`}{`client files will be located in `}<inlineCode parentName=\"p\">{`{directories.build}/client`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"directorieslogs\"\n    }}><inlineCode parentName=\"h3\">{`directories.logs`}</inlineCode></h3>\n    <p>{`Default: Value of `}<inlineCode parentName=\"p\">{`directories.build`}</inlineCode></p>\n    <p>{`The directory in which build & running logs will be outputted.`}</p>\n    <h3 {...{\n      \"id\": \"directoriesresources\"\n    }}><inlineCode parentName=\"h3\">{`directories.resources`}</inlineCode></h3>\n    <p>{`Default: `}<inlineCode parentName=\"p\">{`./src/public`}</inlineCode></p>\n    <p>{`This directory contains assets that should not be transformed and will merely be copied over. (default: `}<inlineCode parentName=\"p\">{`./src/public`}</inlineCode>{`)`}</p>\n    <p>{`The files located inside of `}<inlineCode parentName=\"p\">{`resources`}</inlineCode>{` will be copied inside of the `}<inlineCode parentName=\"p\">{`public`}</inlineCode>{` directory in the output files.`}<br parentName=\"p\"></br>{`\n`}{`Be careful not to use the name of a built resource (such as `}<inlineCode parentName=\"p\">{`index.html`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`main.js`}</inlineCode>{`).`}</p>\n    <p>{`See the chapter on `}<a parentName=\"p\" {...{\n        \"href\": \"../4-public-resources.md\"\n      }}>{`Public Resources`}</a>{` for more information`}</p>\n    <h3 {...{\n      \"id\": \"directoriestranslations\"\n    }}><inlineCode parentName=\"h3\">{`directories.translations`}</inlineCode></h3>\n    <p>{`Default: `}<inlineCode parentName=\"p\">{`./src/translations`}</inlineCode></p>\n    <p>{`This directory contains the translation files used by `}<inlineCode parentName=\"p\">{`react-intl`}</inlineCode>{`. See the chapter about `}<a parentName=\"p\" {...{\n        \"href\": \"../5-i18n.md\"\n      }}>{`i18n`}</a></p>\n    <h3 {...{\n      \"id\": \"routes\"\n    }}><inlineCode parentName=\"h3\">{`routes`}</inlineCode></h3>\n    <p>{`Default: `}<inlineCode parentName=\"p\">{`src/**/*.route.js`}</inlineCode></p>\n    <p>{`A glob matching all files that should be interpreted as route definitions. See the chapter about `}<a parentName=\"p\" {...{\n        \"href\": \"./routing.md\"\n      }}>{`routing`}</a>{` for more information.`}</p>\n    <h3 {...{\n      \"id\": \"pre-init\"\n    }}><inlineCode parentName=\"h3\">{`pre-init`}</inlineCode></h3>\n    <p>{`Default: none`}</p>\n    <p>{`This file allows you to specify code to run before the rest of your application is loaded. You can use it to load\ndependencies needed by your application, such as polyfills.`}</p>\n    <p>{`This file can have a single, optional, default export that is either a Promise, or a function (which optionally returns a Promise).`}</p>\n    <p>{`If exporting a Promise, your application will be loaded after the promise resolves`}</p>\n    <p>{`If exporting a Function, your application will be loaded after the execution of the function and after the Promise the function returns (if any) resolves.`}</p>\n    <h3 {...{\n      \"id\": \"render-html\"\n    }}><inlineCode parentName=\"h3\">{`render-html`}</inlineCode></h3>\n    <p>{`TBD`}</p>\n    <h3 {...{\n      \"id\": \"service-worker\"\n    }}><inlineCode parentName=\"h3\">{`service-worker`}</inlineCode></h3>\n    <p>{`Default: none`}</p>\n    <p>{`If specified, the file will be loaded inside of the service worker.`}</p>\n    <h2 {...{\n      \"id\": \"hooks\"\n    }}><inlineCode parentName=\"h2\">{`hooks`}</inlineCode></h2>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"plugins.md#hook-system\"\n      }}>{`The first section of Plugins`}</a></p>\n    <h2 {...{\n      \"id\": \"plugins\"\n    }}><inlineCode parentName=\"h2\">{`plugins`}</inlineCode></h2>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"plugins.md#plugin-system\"\n      }}>{`The second section of Plugins`}</a></p>\n    <h2 {...{\n      \"id\": \"specifying-the-path-to-the-configuration-file\"\n    }}>{`Specifying the path to the configuration file`}</h2>\n    <p><inlineCode parentName=\"p\">{`--reworkrc=./app/.reworkrc`}</inlineCode></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}