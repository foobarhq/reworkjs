{"version":3,"sources":["webpack:///../docs/4-public-resources.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"uPAMaA,G,UAAe,S,4MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,oBADR,oBAGA,4GACA,iBAAQ,CACN,GAAM,qBADR,qBAGA,yHACE,yBAAgB,CACd,WAAc,KADhB,UADF,yHAKA,uBAAK,mBAAU,CACX,UAAa,sBACb,WAAc,MACd,KAAO,EACP,WAAc,OAJb,kIAaL,0FACA,sBAEE,iBAAQ,CACN,WAAc,MADhB,8CAKA,iBAAQ,CACN,WAAc,MADhB,yGAKF,yMAEA,iBAAQ,CACN,GAAM,oBADR,oBAGA,iDACE,gBAAO,CACL,KAAQ,8DACR,WAAc,KACb,yBAAgB,CACf,WAAc,KADf,cAJL,sEAQE,iBAAQ,CACN,WAAc,MATlB,mGAcA,yCACE,yBAAgB,CACd,WAAc,KADhB,gBADF,oCAKA,6HACE,iBAAQ,CACN,WAAc,MAFlB,6CAOE,yBAAgB,CACd,WAAc,KADhB,iCAPF,oCAWE,yBAAgB,CACd,WAAc,KADhB,iBAGF,mFACE,yBAAgB,CACd,WAAc,KADhB,aADF,8EAME,yBAAgB,CACd,WAAc,KADhB,gBANF,KAUE,yBAAgB,CACd,WAAc,KADhB,iBAVF,KAcA,0EACE,yBAAgB,CACd,WAAc,KADhB,aADF,0CAKE,yBAAgB,CACd,WAAc,KADhB,UALF,gIAUE,yBAAgB,CACd,WAAc,KADhB,UAVF,KAcE,yBAAgB,CACd,WAAc,KADhB,SAdF,oB,0MAsBJH,EAAWI,gBAAiB","file":"component---docs-4-public-resources-md-7801a60a662e0a8496fa.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/ephys/Development/reworkjs/core/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"public-resources\"\n    }}>{`Public Resources`}</h1>\n    <p>{`There are two way to access resources with rework.js: statically or through webpack`}</p>\n    <h2 {...{\n      \"id\": \"webpack-resources\"\n    }}>{`Webpack resources`}</h2>\n    <p>{`This is the \"standard\" way to import resources in rework.js. You do this by using the JavaScript `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`import`}</inlineCode>\n      {` statement. The url of the resource will be returned (note: that won't download the resource, only give you the url).`}</p>\n    <pre><code {...{\n        \"className\": \"language-typescript\",\n        \"metastring\": \"jsx\",\n        \"jsx\": true,\n        \"parentName\": \"pre\"\n      }}>{`// my-comp.tsx\n\nimport logoUrl from './logo.svg';\n\nexport default function Logo() {\n  return <img src={logoUrl} />;\n}\n`}</code></pre>\n    <p>{`Resources imported this way have some processing applied to them:`}</p>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`They will usually be optimised if possible`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Their URL can change between two builds because a hash will be added to their URL for cache-busting.`}</li>\n\n    </ul>\n    <p>{`This system will not always meet your needs. If you need webpack to back-off and let you have full control over your resource,\nyou'll want to use Static Resources (see below).`}</p>\n    <h2 {...{\n      \"id\": \"static-resources\"\n    }}>{`Static resources`}</h2>\n    <p>{`Resources located in the `}\n      <a {...{\n        \"href\": \"https://www.reworkjs.com/configuration#directoriesresources\",\n        \"parentName\": \"p\"\n      }}><inlineCode {...{\n          \"parentName\": \"a\"\n        }}>{`resources`}</inlineCode></a>\n      {` directory will be copied as-is at the root of the build directory.`}\n      <br {...{\n        \"parentName\": \"p\"\n      }} />\n      {`\n`}\n      {`These resources are not processed by webpack, no modification of any kind is done to them.`}</p>\n    <p>{`The directory is `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`./src/public`}</inlineCode>\n      {` by default but is configurable.`}</p>\n    <p>{`In order to access the resource, you can't import its url. Instead, you reference it by URL directly.`}\n      <br {...{\n        \"parentName\": \"p\"\n      }} />\n      {`\n`}\n      {`E.g.: if your resource is located in `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`<resource_folder>/favicon.ico`}</inlineCode>\n      {`, your icon will be available as `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`/favicon.ico`}</inlineCode></p>\n    <p>{`symlinks will be followed when copying the contents of the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`resources`}</inlineCode>\n      {` folder, allowing you to reference files stored\nin vendor folders such as `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`node_modules`}</inlineCode>\n      {`, `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`bower_modules`}</inlineCode>\n      {`.`}</p>\n    <p>{`N.B.: You should avoid importing files located in `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`resources`}</inlineCode>\n      {` using Webpack mechanisms (such as the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`import`}</inlineCode>\n      {` statement) as\nthat will cause the resource to be bundled twice. Instead, load that resource using browser loading systems (`}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`<link>`}</inlineCode>\n      {`, `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`<img>`}</inlineCode>\n      {`, etc...).`}</p>\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}