(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{dJzC:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return d}));var a=n("Fcif"),o=n("+I+c"),r=(n("mXGw"),n("/FXl")),i=n("TjRS"),l=(n("aD51"),{});void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/6-page-head.md"}});var c={_frontmatter:l},m=i.a;function d(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)(m,Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"page-metadata"},"Page Metadata"),Object(r.b)("h2",{id:"runtime-metadata"},"Runtime metadata"),Object(r.b)("p",null,"Setting the page metadata is handled by ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/staylor/react-helmet-async"}),Object(r.b)("inlineCode",{parentName:"a"},"react-helmet-async")),".\nThere is no need to setup it, simply start using it!"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:"jsx",jsx:!0}),"// pages/home/home.view.tsx\n\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\n\nexport default function HomeView() {\n  return (\n    <>\n      <Helmet>\n        <title>HomePage | MyCoolSite</title>\n      </Helmet>\n\n      <p>Welcome to my cool site</p>\n    </>\n  );\n}\n")),Object(r.b)("p",null,"We recommend you place the default Helmet configuration inside of ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"advanced-topics/root-component.md"}),"the Root component")),Object(r.b)("h2",{id:"static-metadata"},"Static metadata"),Object(r.b)("p",null,"Sometimes, you need to send metadata even if JavaScript is disabled, or before any JavaScript executes."),Object(r.b)("p",null,"If you use Server-Side-Rendering, the HTML sent by the server will contain all the metadata provided by Helmet.\nIf you don't use SSR, you can still send some metadata by modifying the base ",Object(r.b)("inlineCode",{parentName:"p"},"index.html")," file."),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Note"),": Without SSR, ",Object(r.b)("inlineCode",{parentName:"p"},"index.html")," is built only once and used for all pages. With SSR, it is rebuilt for each page."),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Setup"),":"),Object(r.b)("p",null,"In the following example, we're adding Google Tag Manager on all pages"),Object(r.b)("p",null,"First you need to tell the framework to ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.reworkjs.com/configuration#render-html"}),"use a custom html file generator"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json5"}),'// .reworkrc\n{\n  "render-html": "./src/render-html.js"\n}\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// src/render-html.js\n\n// note: this file is loaded by the builder itself, it needs to be valid JavaScript for your current version of Node.\n// \"data\" contains the metadata generated by helmet & the framework\nmodule.exports = function renderHtml(data) {\n\n  return `\n<!DOCTYPE html>\n<html ${data.htmlAttributes}>\n<head>\n  ${data.head}\n\n  \x3c!-- Google Tag Manager --\x3e\n  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n      new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n  })(window,document,'script','dataLayer','xxx');<\/script>\n  \x3c!-- End Google Tag Manager --\x3e\n</head>\n<body ${data.bodyAttributes}>\n  \x3c!-- Google Tag Manager (noscript) --\x3e\n  <noscript>\n    <iframe\n      src=\"https://www.googletagmanager.com/ns.html?id=xxx\"\n      height=\"0\"\n      width=\"0\"\n      style=\"display:none;visibility:hidden\"\n    ></iframe>\n  </noscript>\n  \x3c!-- End Google Tag Manager (noscript) --\x3e\n\n  ${data.body}\n</body>\n</html>\n  `;\n};\n")))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/6-page-head.md"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-6-page-head-md-8590c1e7265d49e0a5c0.js.map