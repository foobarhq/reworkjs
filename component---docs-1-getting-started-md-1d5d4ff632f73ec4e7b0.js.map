{"version":3,"sources":["webpack:///../docs/1-getting-started.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"uPAMaA,G,UAAe,S,2MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,gOAEA,8IACA,iBAAQ,CACN,GAAM,mBADR,oBAGA,+GACE,yBAAgB,CACd,WAAc,KADhB,OADF,SAKA,sDACE,gBAAO,CACL,KAAQ,kCACR,WAAc,KAFhB,iBADF,uBAME,yBAAgB,CACd,WAAc,KADhB,YANF,4CAWA,iKACA,sBAEE,iBAAQ,CACN,WAAc,MADhB,yBAGE,yBAAgB,CACd,WAAc,MADhB,aAKF,iBAAQ,CACN,WAAc,MADhB,0BAGE,yBAAgB,CACd,WAAc,MADhB,sCAKF,iBAAQ,CACN,WAAc,MADhB,4BAGE,yBAAgB,CACd,WAAc,MADhB,kCAKJ,2JAEE,yBAAgB,CACd,WAAc,KADhB,2BAFF,4IAOA,iBAAQ,CACN,GAAM,+BADR,gCAGA,0GACE,yBAAgB,CACd,WAAc,KADhB,aADF,YAKA,gDACE,yBAAgB,CACd,WAAc,KADhB,qBADF,iDAKE,iBAAQ,CACN,WAAc,MANlB,sCAWE,gBAAO,CACL,KAAQ,WACR,WAAc,KAFhB,WAXF,wBAgBE,yBAAgB,CACd,WAAc,KADhB,+CAGF,iBAAQ,CACN,GAAM,8BADR,+BAGA,sFACE,gBAAO,CACL,KAAQ,iBACR,WAAc,KAFhB,0BADF,W,yMAUJH,EAAWI,gBAAiB","file":"component---docs-1-getting-started-md-1d5d4ff632f73ec4e7b0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/ephys/Development/reworkjs/core/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h1>\n    <p>{`The main objective of this framework is to make creating React-based apps as fast as possible. Most of the React stack\ncomes preconfigured for you, and installing it all only takes a couple minutes.`}</p>\n    <p>{`This document will walk you through the few steps you need to follow in order to get a basic working web application.`}</p>\n    <h2 {...{\n      \"id\": \"1-project-setup\"\n    }}>{`1. Project Setup`}</h2>\n    <p>{`You have two possibilities to setup the initial project: either manually, or using the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`rjs`}</inlineCode>\n      {` cli.`}</p>\n    <p>{`The easiest way is to install `}\n      <a {...{\n        \"href\": \"https://github.com/reworkjs/cli\",\n        \"parentName\": \"p\"\n      }}>{`@reworkjs/cli`}</a>\n      {` globally, then run `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`rjs init`}</inlineCode>\n      {` at the\nroot of your project directory.`}</p>\n    <p>{`If you do not wish to install the cli globally, you will need to manually install the framework. No worries though, it is a three-liner:`}</p>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Init the NPM project: `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`npm init`}</inlineCode></li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Install the framework: `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`npm install --save @reworkjs/core`}</inlineCode></li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Configure the framework: `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`./node_modules/.bin/rjs init`}</inlineCode></li>\n\n    </ul>\n    <p>{`Even though the second method does not install the global CLI, you can still use\nthe local, project-specific, one available under `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`./node_modules/.bin/rjs`}</inlineCode>\n      {`. The rest of the documentation will assume the\nglobal cli is available, but all used commands are fully compatible with the local cli.`}</p>\n    <h2 {...{\n      \"id\": \"2-starting-your-application\"\n    }}>{`2. Starting your application`}</h2>\n    <p>{`If you followed the first part of this tutorial, your package.json will contain a `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`start:dev`}</inlineCode>\n      {` script.`}</p>\n    <p>{`You can from now on run `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`npm run start:dev`}</inlineCode>\n      {` to start the application in development mode.`}\n      <br {...{\n        \"parentName\": \"p\"\n      }} />\n      {`\n`}\n      {`Alternatively you can use the `}\n      <a {...{\n        \"href\": \"./cli.md\",\n        \"parentName\": \"p\"\n      }}>{`rjs cli`}</a>\n      {` directly by running `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`NODE_ENV=development rjs start --port 3000`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"3-creating-your-first-page\"\n    }}>{`3. Creating your first page`}</h2>\n    <p>{`You app is up, but it doesn't do much currently. It's time to `}\n      <a {...{\n        \"href\": \"./2-routing.md\",\n        \"parentName\": \"p\"\n      }}>{`create your first page`}</a>\n      {`!`}</p>\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}