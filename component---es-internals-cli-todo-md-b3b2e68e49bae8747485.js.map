{"version":3,"sources":["webpack:///../es/internals/cli/TODO.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qfAMO,IAAMA,EAAe,Q,0MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,kBADR,mBAGA,iBAAQ,CACN,GAAM,WACL,0BAAYC,WAAW,MAAvB,YACH,6CACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,0CACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,qGAKtB,iBAAQ,CACN,GAAM,eACL,0BAAYA,WAAW,MAAvB,gBACH,4BAAW,0BAAYA,WAAW,KAAvB,gBACX,iBAAQ,CACN,GAAM,eACL,0BAAYA,WAAW,MAAvB,gBACH,4BAAW,0BAAYA,WAAW,KAAvB,8JAGX,iBAAQ,CACN,GAAM,cACL,0BAAYA,WAAW,MAAvB,eACH,4BAAW,0BAAYA,WAAW,KAAvB,+BACX,iBAAQ,CACN,GAAM,aACL,0BAAYA,WAAW,MAAvB,cACH,mCACA,qBAAG,0BAAYA,WAAW,KAAvB,iEACH,iBAAQ,CACN,GAAM,gBACL,0BAAYA,WAAW,MAAvB,iBACH,qBAAG,0BAAYA,WAAW,KAAvB,yEACH,iBAAQ,CACN,GAAM,oBACL,0BAAYA,WAAW,MAAvB,wBACH,mCACA,qCACA,qBAAG,0BAAYA,WAAW,KAAvB,qDACH,iBAAQ,CACN,GAAM,SACL,0BAAYA,WAAW,MAAvB,UACH,qDAAoC,0BAAYA,WAAW,KAAvB,UAApC,KACA,iBAAQ,CACN,GAAM,SACL,0BAAYA,WAAW,MAAvB,UACH,mCACA,qBAAG,0BAAYA,WAAW,KAAvB,gHACH,iBAAQ,CACN,GAAM,aACL,0BAAYA,WAAW,MAAvB,cACH,qBAAG,0BAAYA,WAAW,KAAvB,gEACH,iBAAQ,CACN,GAAM,gBACL,0BAAYA,WAAW,MAAvB,iBACH,qBAAG,0BAAYA,WAAW,KAAvB,yEACH,iBAAQ,CACN,GAAM,gBACL,0BAAYA,WAAW,MAAvB,iBACH,qBAAG,0BAAYA,WAAW,KAAvB,gEACH,iBAAQ,CACN,GAAM,aACL,0BAAYA,WAAW,MAAvB,cACH,qBAAG,0BAAYA,WAAW,KAAvB,0CACH,iBAAQ,CACN,GAAM,QACL,0BAAYA,WAAW,MAAvB,SACH,iBAAQ,CACN,GAAM,mBACL,0BAAYA,WAAW,MAAvB,qB,iMAKPJ,EAAWK,gBAAiB","file":"component---es-internals-cli-todo-md-b3b2e68e49bae8747485.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ephys/Documents/dev/reworkjs/reworkjs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"binary-methods\"\n    }}>{`binary methods:`}</h1>\n    <h2 {...{\n      \"id\": \"install\"\n    }}><inlineCode parentName=\"h2\">{`install`}</inlineCode></h2>\n    <p>{`Add to package.json:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`\"pre-commit\": \"framework lint staged\"`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`\"lint-staged\": {\n   \"*.js\": \"framework lint script\",\n     \"*.css\": \"framework lint style\"\n }`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"lint-staged\"\n    }}><inlineCode parentName=\"h2\">{`lint staged`}</inlineCode></h2>\n    <p>{`run `}<inlineCode parentName=\"p\">{`lint-staged`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"lint-script\"\n    }}><inlineCode parentName=\"h2\">{`lint script`}</inlineCode></h2>\n    <p>{`run `}<inlineCode parentName=\"p\">{`eslint --ignore-path .gitignore \n            --ignore-pattern $(config.directories.build) \n            --ignore-pattern $(config.directories.resources)`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"lint-style\"\n    }}><inlineCode parentName=\"h2\">{`lint style`}</inlineCode></h2>\n    <p>{`run `}<inlineCode parentName=\"p\">{`stylelint ./app/**/*.s?css`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"start-dev\"\n    }}><inlineCode parentName=\"h2\">{`start dev`}</inlineCode></h2>\n    <p>{`Build DLLs`}</p>\n    <p><inlineCode parentName=\"p\">{`cross-env NODE_ENV=development babel-node ./framework/server`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"start-tunnel\"\n    }}><inlineCode parentName=\"h2\">{`start tunnel`}</inlineCode></h2>\n    <p><inlineCode parentName=\"p\">{`cross-env NODE_ENV=development ENABLE_TUNNEL=true node .build/server`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"start-production\"\n    }}><inlineCode parentName=\"h2\">{`start prod(uction)?`}</inlineCode></h2>\n    <p>{`Build DLLs`}</p>\n    <p>{`Build server`}</p>\n    <p><inlineCode parentName=\"p\">{`cross-env NODE_ENV=production node .build/server`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"clean\"\n    }}><inlineCode parentName=\"h2\">{`clean`}</inlineCode></h2>\n    <p>{`Remove any generated folder (`}<inlineCode parentName=\"p\">{`.build`}</inlineCode>{`)`}</p>\n    <h2 {...{\n      \"id\": \"build\"\n    }}><inlineCode parentName=\"h2\">{`build`}</inlineCode></h2>\n    <p>{`Build DLLs`}</p>\n    <p><inlineCode parentName=\"p\">{`cross-env NODE_ENV=production webpack --config framework/internals/webpack/webpack.prod.babel.js --color -p`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"build-dll\"\n    }}><inlineCode parentName=\"h2\">{`build dll`}</inlineCode></h2>\n    <p><inlineCode parentName=\"p\">{`babel-node -- ./framework/internals/scripts/dependencies.js`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"build-server\"\n    }}><inlineCode parentName=\"h2\">{`build server`}</inlineCode></h2>\n    <p><inlineCode parentName=\"p\">{`babel server -d .build/server && babel internals -d .build/internals`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"extract-intl\"\n    }}><inlineCode parentName=\"h2\">{`extract-intl`}</inlineCode></h2>\n    <p><inlineCode parentName=\"p\">{`babel-node -- ./framework/internals/scripts/extract-intl.js`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"pagespeed\"\n    }}><inlineCode parentName=\"h2\">{`pagespeed`}</inlineCode></h2>\n    <p><inlineCode parentName=\"p\">{`node ./internals/scripts/pagespeed.js`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"test\"\n    }}><inlineCode parentName=\"h2\">{`test`}</inlineCode></h2>\n    <h2 {...{\n      \"id\": \"test---coverage\"\n    }}><inlineCode parentName=\"h2\">{`test --coverage`}</inlineCode></h2>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}