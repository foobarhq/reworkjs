{"version":3,"sources":["webpack:///../docs/public-resources.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,0MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,oBADR,oBAGA,4KAC0B,0BAAYC,WAAW,KAAvB,UAD1B,OACoF,0BAAYA,WAAW,KAAvB,WADpF,2DACmM,0BAAYA,WAAW,KAAvB,WADnM,WAEI,0BAAYA,WAAW,KAAvB,iDAFJ,WAEyG,0BAAYA,WAAW,KAAvB,gBAFzG,qCAGA,sKAC0B,0BAAYA,WAAW,KAAvB,UAD1B,sDAEA,kJACK,0BAAYA,WAAW,KAAvB,gBADL,M,iMAMJJ,EAAWK,gBAAiB","file":"component---docs-public-resources-md-0802c98bbde6d15c4f35.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ephys/Documents/dev/reworkjs/reworkjs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"public-resources\"\n    }}>{`Public Resources`}</h1>\n    <p>{`Public resources are resources which will be copied as-is in the build. They will never be processed, and should never\nbe imported using webpack's `}<inlineCode parentName=\"p\">{`import`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`require`}</inlineCode>{`. Instead, reference them directly by url starting with `}<inlineCode parentName=\"p\">{`/public`}</inlineCode>{`\n(e.g. `}<inlineCode parentName=\"p\">{`/public/font-awesome/css/font-awesome.min.css`}</inlineCode>{`) using `}<inlineCode parentName=\"p\">{`React-Helmet`}</inlineCode>{` and other native import systems.`}</p>\n    <p>{`As they will never be processed, they will not be optimised by the framework. As such, this public folder should\nbe used as a last resort if `}<inlineCode parentName=\"p\">{`import`}</inlineCode>{`-ing the resource using JavaScript does not work. `}</p>\n    <p>{`Symbolic links will be processed when copying the contents of this folder, allowing you to reference files stored\ninside `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}